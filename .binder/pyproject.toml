[project]
name = "app"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.12,<3.13"
prerelease-mode = "if-necessary-or-explicit"
dependencies = [
    "aiofiles",
    "aiohttp",
    "aiosignal",
    "aiosqlite",
    "alembic",
    "anyio",
    "arrow",
    "asyncio",
    "attrs",
    "babel",
    "backcall",
    "beautifulsoup4",
    "black",
    "bleach",
    "blosc2",
    "bokeh",
    "boto3",
    "botocore",
    "bottleneck",
    "cachelib",
    "catboost",
    "certifi",
    "cffi",
    "click",
    "cloudpickle",
    "colorama",
    "colorlog",
    "comm",
    "contourpy",
    "cryptography",
    "cycler",
    "cython",
    "dask",
    "dateparser",
    "debugpy",
    "decorator",
    "defusedxml",
    "dill",
    "distlib",
    "distributed",
    "docstring-to-markdown",
    "entrypoints",
    "enum-tools",
    "exchange-calendars",
    "executing",
    "fastjsonschema",
    "fastparquet",
    "fonttools",
    "fqdn",
    "fsspec",
    "future",
    "gitdb",
    "graphviz",
    "greenlet",
    "gunicorn",
    "h5py",
    "html5lib",
    "httpcore",
    "httpx",
    "hyperframe",
    "idna",
    "imgkit",
    #"importlib-metadata",
    #"importlib-resources",
    "in-place",
    "ipykernel",
    "ipympl",
    "ipython",
    "ipython-genutils",
    "ipython-pygments-lexers",
    "ipython-suggestions",
    "ipywidgets",
    "isoduration",
    "isort",
    "jedi",
    "jinja2",
    "joblib",
    "json-lsp",
    "json5",
    "jsonref",
    "jsonschema",
    "kiwisolver",
    "latex",
    "lightgbm",
    "lsp",
    "lxml",
    "mako",
    "markdown",
    "markupsafe",
    "matplotlib",
    "matplotlib-inline",
    "mistune",
    "monotonic",
    "msgpack",
    "multitasking",
    "nbclassic",
    "nbclient",
    "notebook",
    "nbconvert",
    "nbformat",
    "nbdime",
    "neptune[lightgbm]",
    "neptune-api",
    "neptune-lightgbm",
    "neptune-optuna",
    "neptune-sklearn",
    "neptune-xgboost",
    "nest-asyncio",
    "notebook-shim",
    "numba",
    "numexpr",
    "numpy",
    "openpyxl",
    "optuna",
    #"optuna-integration",
    "orjson",
    "pandas[computation,performance]",
    "pandoc",
    "pandocfilters",
    "parallel-ssh",
    "pathlib2",
    "pendulum",
    "pexpect",
    "pip",
    "plotly",
    "pluggy",
    "protobuf",
    "psutil",
    "ptyprocess",
    "pure-eval",
    "pyarrow",
    "pycparser",
    "pygments",
    "pymysql",
    "pyparsing",
    "python-dateutil",
    "python-dotenv",
    "python-lsp-jsonrpc",
    "python-lsp-server[all]",
    "pytz",
    "pyyaml",
    "pyzmq",
    "redis",
    "requests",
    "rfpimp",
    "rich",
    "s3fs",
    "scikit-learn",
    "scikit-plot",
    "scipy",
    "setuptools",
    "six",
    #"sniffio",
    "sortedcontainers",
    "sqlalchemy",
    "statsmodels",
    "tables",
    "tabulate",
    "tblib",
    "tenacity",
    "terminado",
    "threadpoolctl",
    "tornado",
    "tqdm",
    "typing-extensions",
    "tzdata",
    "ujson",
    #"uri-template",
    "urllib3",
    #"wcwidth",
    "webcolors",
    "webencodings",
    "websocket-client",
    "websockets",
    "widgetsnbextension",
    "xgboost",
    "xlrd",
    "xlsxwriter",
    #"xyzservices",
    "y-py",
    "yaml-lsp",
    #"yellowbrick",
    "yfinance",
    "ypy-websocket",
    "zipp",
    "lolviz",
    "bintrees",
    #"optuna-distributed",
    "shapash[report]",
    "shap",
    "cysimdjson<24",
    #"feature-engine",
    #"deepchecks-client",
    #"deepchecks-installer",
    "mystmd",
    "python-lsp-black",
    "python-lsp-isort",
    "pylsp-rope",
    "jupyterlab",
    "myst-parser",
    "myst-nb",
    "jupyter-book",
    "ipylab",
    "jlab-enhanced-launcher",
    "jupyter-server-mathjax",
    "jupyterlab-git",
    "jupyterlab-github",
    "jupyterlab-latex",
    "jupyterlab-lsp",
    "jupyterlab-mathjax2",
    "jupyterlab-myst",
    "prettytable",
    "jupytext",
    "kaleido<=0.2.1",
    "jupyterlite-core",
    "jupyterlite-pyodide-kernel",
    "thebe",
    "ipyleaflet",
    "dtreeviz[all]",
    "jupyter-server",
]

[tool.uv]
environments = [
    "sys_platform == 'linux'",
]

[tool.uv.pip]
python-platform = "linux"
